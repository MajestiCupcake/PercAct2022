# loading packages
pacman::p_load(mousetrap, tidyverse)
# loading in data
d <- read_csv('example_data/subject-3.csv')
# loading in data
d <- read_csv('example_data/subject-98.csv')
# loading in data
d <- read.csv('example_data/subject-98.csv')
m <- mt_import_mousetrap(d)
??mt_import_mousetrap
m <- mousetrap::mt_import_mousetrap(d)
install.packages("mousetrap")
m <- mt_import_mousetrap(d)
m <- mousetrap::mt_import_mousetrap(d)
install.packages("mousetrap")
install.packages("mousetrap")
# loading packages
pacman::p_load(mousetrap, tidyverse)
# loading in data
d <- read.csv('example_data/subject-98.csv')
m <- mousetrap::mt_import_mousetrap(d)
# initial plot
mt_plot(m)
d3 <- read.csv('example_data/subject-3.csv')
m3<- mousetrap::mt_import_mousetrap(d3)
mt_plot(m3)
# specified
mt_plot(data = m, use = 'trajectories')
# specified
mt_plot(data = m3, use = 'trajectories')
# specified
mt_plot(data = m, use = 'trajectories')
mt_plot(m, color = 'trial_type')
mt_plot(m3,color='trial_type')
# align the mouse trajectories to one side
m <- mt_remap_symmetric(
m,
use = 'trajectories',
remap_xpos = "left"
)
# plot again
mt_plot(
m,
use = 'trajectories',
color = 'trial_type'
)
# align the mouse trajectories to one side
m3 <- mt_remap_symmetric(
m3,
use = 'trajectories',
remap_xpos = "left"
)
# plot again
mt_plot(
m3,
use = 'trajectories',
color = 'trial_type'
)
mt_plot(
m,
x = 'timestamps', # modifying the x-axis to plot timestamps
y = 'xpos',       # modifying the y-axis to plot the xpos
use = 'trajectories',
color = 'trial_type'
)
a <- mt_plot(
m,
x = 'timestamps', # modifying the x-axis to plot timestamps
y = 'xpos',       # modifying the y-axis to plot the xpos
use = 'trajectories',
color = 'trial_type'
)
b <- mt_plot(
m3,
x = 'timestamps', # modifying the x-axis to plot timestamps
y = 'xpos',       # modifying the y-axis to plot the xpos
use = 'trajectories',
color = 'trial_type'
)
gridExtra::grid.arrange(a,b)
m <- mt_exclude_initiation(m,save_as=m_try)
view(m)
variables(m)
??variables
m <- mt_exclude_initiation(m)
mt_plot(
m,
x = 'timestamps', # modifying the x-axis to plot timestamps
y = 'xpos',       # modifying the y-axis to plot the xpos
use = 'trajectories',
color = 'trial_type'
)
m3 <- mt_exclude_initiation(m)
m3 <- mt_exclude_initiation(m3)
ab <- gridExtra::grid.arrange(a,b)
library(gridExtra)
grid.arrange(c,d,ab,nrow=2)
c <- mt_plot(
m,
x = 'timestamps', # modifying the x-axis to plot timestamps
y = 'xpos',       # modifying the y-axis to plot the xpos
use = 'trajectories',
color = 'trial_type'
)
d <- mt_plot(
m3,
x = 'timestamps', # modifying the x-axis to plot timestamps
y = 'xpos',       # modifying the y-axis to plot the xpos
use = 'trajectories',
color = 'trial_type'
)
grid.arrange(c,d,ab,nrow=2)
grid.arrange(c,d,a,b,nrow=2)
m <- mt_exclude_initiation(m)
m3 <- mt_exclude_initiation(m3)
m <- mousetrap::mt_import_mousetrap(d)
m3<- mousetrap::mt_import_mousetrap(d3)
m <- mousetrap::mt_import_mousetrap(d)
m3 <- mt_exclude_initiation(m3)
d <- mt_plot(
m3,
x = 'timestamps', # modifying the x-axis to plot timestamps
y = 'xpos',       # modifying the y-axis to plot the xpos
use = 'trajectories',
color = 'trial_type'
)
grid.arrange(c,d,a,b,nrow=2)
# align the mouse trajectories to one side
m3 <- mt_remap_symmetric(
m3,
use = 'trajectories',
remap_xpos = "left"
)
m3 <- mt_exclude_initiation(m3)
d <- mt_plot(
m3,
x = 'timestamps', # modifying the x-axis to plot timestamps
y = 'xpos',       # modifying the y-axis to plot the xpos
use = 'trajectories',
color = 'trial_type'
)
grid.arrange(c,d,a,b,nrow=2)
m <- mt_time_normalize(m)
m3 <- mt_time_normalize(m3)
mt_time_normalize(m)
View(m)
mt_plot(
m,
use = 'tn_trajectories',
color = 'trial_type'
)
m_tn <- mt_time_normalize(
m,
nsteps = 10
)
#plot
mt_plot(
m_tn,
use = 'tn_trajectories',
color = 'trial_type'
)
m_tn <- mt_time_normalize(
m,
nsteps = 50
)
#plot
mt_plot(
m_tn,
use = 'tn_trajectories',
color = 'trial_type'
)
#plot
fiveten <- mt_plot(
m_tn,
use = 'tn_trajectories',
color = 'trial_type'
)
m_tn <- mt_time_normalize(
m,
nsteps = 10
)
#plot
ten <- mt_plot(
m_tn,
use = 'tn_trajectories',
color = 'trial_type'
)
m_tn <- mt_time_normalize(
m,
nsteps = 100
)
#plot
hun <- mt_plot(
m_tn,
use = 'tn_trajectories',
color = 'trial_type'
)
grid.arrange(ten,fiveten,hun)
grid.arrange(ten,fiveten,hun,nrow=2)
# loading in data
d <- read.csv('example_data/subject-98.csv')
m <- mousetrap::mt_import_mousetrap(d)
# align the mouse trajectories to one side
m <- mt_remap_symmetric(
m,
use = 'trajectories',
remap_xpos = "left"
)
m <- mt_exclude_initiation(m)
m <- mt_time_normalize(m)
m_tn <- mt_time_normalize(
m,
nsteps = 100
)
#plot
hun <- mt_plot(
m_tn,
use = 'tn_trajectories',
color = 'trial_type'
)
m_tn <- mt_time_normalize(
m,
nsteps = 10
)
#plot
ten <- mt_plot(
m_tn,
use = 'tn_trajectories',
color = 'trial_type'
)
m_tn <- mt_time_normalize(
m,
nsteps = 50
)
#plot
fiveten <- mt_plot(
m_tn,
use = 'tn_trajectories',
color = 'trial_type'
)
grid.arrange(ten,fiveten,hun,nrow=2)
#plot
fiveten <- mt_plot(
m_tn,
use = 'tn_trajectories',
color = 'trial_type'
)+labs(title='50')
?mt_plot()
#plot
fiveten <- mt_plot(
m_tn,
use = 'tn_trajectories',
color = 'trial_type',
mt_id='50'
)
grid.arrange(ten,fiveten,hun,nrow=2)
#plot
fiveten <- mt_plot(
m_tn,
use = 'tn_trajectories',
color = 'trial_type'
)+ggplot::title('50')
#plot
fiveten <- mt_plot(
m_tn,
use = 'tn_trajectories',
color = 'trial_type'
)+ggplot2::title('50')
#plot
fiveten <- mt_plot(
m_tn,
use = 'tn_trajectories',
color = 'trial_type'
)+ggplot2::ggtitle('50')
grid.arrange(ten,fiveten,hun,nrow=2)
#plot
ten <- mt_plot(
m_tn,
use = 'tn_trajectories',
color = 'trial_type'
)+ggplot2::ggtitle('10')
m_tn <- mt_time_normalize(
m,'
nsteps = 10
)
m_tn <- mt_time_normalize(
m,
nsteps = 10
)
#plot
ten <- mt_plot(
m_tn,
use = 'tn_trajectories',
m_tn <- mt_time_normalize(
m,
nsteps = 10
)
#plot
ten <- mt_plot(
m_tn,
use = 'tn_trajectories',
color = 'trial_type'
)+ggplot2::ggtitle('10')
#plot
hun <- mt_plot(
m_tn,
use = 'tn_trajectories',
color = 'trial_type'
)+ggplot2::ggtitle('100')
grid.arrange(ten,fiveten,hun,nrow=2)
mt_plot_aggregate(
m,
use = 'trajectories',
color = 'trial_type'
)
mt_plot_aggregate(
m,
use = 'tn_trajectories',
color = 'trial_type'
) +
labs(
title = 'Aggregated time-normalized mouse trajectories')
??labs()
mt_plot_aggregate(
m,
use = 'tn_trajectories',
color = 'trial_type'
) +
ggtitle('Aggregated time-normalized mouse trajectories')
mt_plot_aggregate(
m,
use = 'tn_trajectories',
color = 'trial_type'
) +
ggplot2::ggtitle('Aggregated time-normalized mouse trajectories')
e <- mt_plot_aggregate(
m,
use = 'trajectories',
color = 'trial_type'
)+ggplot2::ggtitle('Aggregated mouse trajectories')
f <- mt_plot_aggregate(
m_tn,
use = 'tn_trajectories',
color = 'trial_type'
) +
ggplot2::ggtitle('Aggregated time-normalized mouse trajectories')
grid.arrange(e,f)+ggplot2::ggtitle('Compare')
?grid.arrange
grid.arrange(e,f,title('Compare'))
grid.arrange(e,f)
m <- mt_measures(m, use = 'tn_trajectories')
glimpse(m)
??glimpse
library(dplyr)
glimpse(m)
View(m)
glimpse(m$measures)
mt_measures_ag <- mt_aggregate(
m,
use = 'measures',
use_variables = c('MAD', 'xpos_flips','AUC', 'RT'), # if you want all of the measures, exclude this line
use2_variables = 'trial_type'
)
mt_measures_ag
t.test(data=mt_measures_ag,
trial_type~MAD,
)
t.test(data=mt_measures_ag,
dissimilarMAD,similarMAD
)
t.test(MAD~trial_type,data=m)
t.test(MAD~trial_type,data=mt_measures_ag)
View(mt_measures_ag)
as.data.frame(m$measures)
m_mea <- as.data.frame(m$measures)
glimpse(m_mea)
m_data <- as.data.frame(m$data)
m_mad_auc <- subset(c(MAD,AUC,RT))
m_mad_auc <- subset(c(MAD,AUC,RT),data=m_mea)
m_mad_auc <- subset(c(m_mea$MAD,m_mea$AUC,m_mea$RT))
??subset
m_mad_auc <- data.table::subset(c(m_mea$MAD,m_mea$AUC,m_mea$RT))
?subset
m_mad_auc <- subset(m_mea,MAD,AUC,RT)
m_mad_auc <- subset(m_mea,c(MAD,AUC,RT))
m_mad_auc <- subset(m_mea,+c(MAD,AUC,RT))
m_mad_auc <- subset(m_mea,c(MAD,AUC,RT))
m_mad_auc <- subset(m_mea,select=c(MAD,AUC,RT))
m_data_trial <- subset(m_data,select=c(trial_type))
use <- merge(m_data_trial,m_mad_auc)
t.test(MAD~RT,data=use)
t.test(trial_type~RT,data=use)
t.test(RT~trial_type,data=use)
t.test(MAD~trial_type,data=use)
t.test(AUC~trial_type,data=use)
auc <- t.test(AUC~trial_type,data=use)
MAD <- t.test(MAD~trial_type,data=use)
rt <- t.test(rt~trial_type,data=use)
rt <- t.test(RT~trial_type,data=use)
mt_measures_ag <- mt_aggregate(
m3,
use = 'measures',
use_variables = c('MAD', 'xpos_flips','AUC', 'RT'), # if you want all of the measures, exclude this line
use2_variables = 'trial_type'
)
m3 <- mt_measures(m3, use = 'tn_trajectories')
mt_measures_ag <- mt_aggregate(
m3,
use = 'measures',
use_variables = c('MAD', 'xpos_flips','AUC', 'RT'), # if you want all of the measures, exclude this line
use2_variables = 'trial_type'
)
m_mea <- as.data.frame(m3$measures)
m_mad_auc <- subset(m_mea,select=c(MAD,AUC,RT))
m_data <- as.data.frame(m3$data)
m_data_trial <- subset(m_data,select=c(trial_type))
use <- merge(m_data_trial,m_mad_auc)
auc3 <- t.test(AUC~trial_type,data=use)
MAD3 <- t.test(MAD~trial_type,data=use)
rt3 <- t.test(RT~trial_type,data=use)
sara <- c(rt,auc,MAD)
laura <- c(rt3,auc3,MAD3)
tt <- data.frame(sara,laura)
View(tt)
table(tt[1],tt$data.name,
tt$p.value,
tt$data.name.1,
tt$p.value.1,
tt$data.name.2,
tt$p.value.2,
tt$data.name.3,
tt$p.value.3)
table(tt$data.name,
tt$p.value,
tt$data.name.1,
tt$p.value.1,
tt$data.name.2,
tt$p.value.2,
tt$data.name.3,
tt$p.value.3)
table(tt$data.name,
tt$p.value,
tt$data.name.1,
tt$p.value.1,
tt$data.name.2,
tt$p.value.2)
